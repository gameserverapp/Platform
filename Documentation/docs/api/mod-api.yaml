openapi: 3.0.0
info:
  title: 'Mod API'
  description: "This api is used by game server mods to interact with the platform.\n\n## API key\nFind the OAuth API keys here: https://dash.gameserverapp.com/configure/api\n\n## Request headers\nAll requests require to have the following HTTP headers:\n\n```composer log\nx-client-id: {your Client ID}\nx-client-secret: {your Client Secret}\n```"
  contact:
    email: support@gameserverapp.com
  version: '2'
servers:
  -
    url: 'https://api.gameserverapp.com'
    description: api.gameserverapp.com
paths:
  '/mod-api/v2/game-shop/{name}':
    get:
      tags:
        - Shop
      summary: 'Get items'
      description: 'Get settings for shop index page. For ASA servers `eos_id` is required.'
      operationId: indexShop
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
        -
          name: steam_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: '76561198023513722'
        -
          name: eos_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: 00021769f66c46d1a053219a51c2dd9f
        -
          name: search
          in: query
          required: false
          schema:
            type: string
          example: 'search query'
        -
          name: filter
          in: query
          required: false
          schema:
            type: string
          example: 'filter category'
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsa-shop-index }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/game-shop/{name}/pack/{id}':
    get:
      tags:
        - Shop
      summary: 'Show item'
      description: 'Show shop item data'
      operationId: showShop
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
        -
          name: id
          in: path
          required: true
          schema:
            type: string
          example: adfce8f4-1300-4503-a2e1-47eb0dc78e0d
        -
          name: steam_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: '76561198023513722'
        -
          name: eos_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: 00021769f66c46d1a053219a51c2dd9f
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsa-shop-detail }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/game-shop/{name}/pack/{id}/order':
    post:
      tags:
        - Shop
      summary: 'Order item'
      description: 'Order shop item'
      operationId: orderShop
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
        -
          name: id
          in: path
          required: true
          schema:
            type: string
          example: adfce8f4-1300-4503-a2e1-47eb0dc78e0d
        -
          name: steam_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: '76561198023513722'
        -
          name: eos_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: 00021769f66c46d1a053219a51c2dd9f
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  steam_id: { type: string, example: 00021769f66c46d1a053219a51c2dd9f }
                  eos_id: { type: string, example: 00021769f66c46d1a053219a51c2dd9f }
                  identifier: { type: string, example: gameshop-order-response }
                  success: { type: boolean, example: 'true' }
                  message: { type: string, example: 'Thank you for your order! Your order will be delivered shortly.' }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/integration-mod':
    post:
      tags:
        - Access
      summary: 'Check user access'
      description: 'Call to confirm the user is allowed to access'
      operationId: checkAccess
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                steam_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: '76561198023513722'
                eos_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: 00021769f66c46d1a053219a51c2dd9f
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsamod-general }
                  steam_id: { type: string, example: '76561198023513722' }
                  eos_id: { type: string, example: '76561198023513722' }
                  allowed: { type: boolean, example: 'true' }
                  username_accepted: { type: boolean, example: 'true' }
                  message: { type: string, example: 'You are not on the whitelist' }
                  teleport_xyz: { type: boolean, example: 'false' }
                  custom_roles: { description: 'A list of custom roles with timestamps or an empty array', type: object, example: { '1': '2035-01-22T13:10:41.000000Z' } }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/mute':
    post:
      tags:
        - Access
      summary: 'Check user is muted'
      description: 'Call to check whether the user is allowed to speak in global & local'
      operationId: checkMute
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                steam_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: '76561198023513722'
                eos_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: 00021769f66c46d1a053219a51c2dd9f
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsamod-muted }
                  steam_id: { type: string, example: '76561198023513722' }
                  eos_id: { type: string, example: 00021769f66c46d1a053219a51c2dd9f }
                  muted: { type: boolean, example: 'true' }
                  muted-alert-tex: { type: string, example: 'Your account is muted' }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/button-modal':
    get:
      tags:
        - Vote
      summary: 'Vote screen data'
      description: 'Get information to show on Vote screen / button modal'
      operationId: buttonModal
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsamod-ui-button-modal }
                  title: { type: string, example: 'This is an awesome feature!' }
                  description: { type: string, example: 'This is the description, that you can customize on the dashboard.' }
                  buttons: { type: array, items: { properties: { text: { type: string, example: 'Community website' }, url: { type: string, example: 'https://demo.premiumark.net' } }, type: object } }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/settings':
    get:
      tags:
        - Settings
      summary: 'Settings data'
      description: 'Get settings for keybindings and radial menu.'
      operationId: settings
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsamod-settings }
                  modal-activate-button: { type: string, example: F1 }
                  shop-activate-button: { type: string, example: F2 }
                  review-activate-button: { type: string, example: F3 }
                  review-title: { type: string, example: 'Leave a review!' }
                  report-activate-button: { type: string, example: F4 }
                  modal-radial: { type: boolean, example: 'true' }
                  shop-radial: { type: boolean, example: 'true' }
                  review-radial: { type: boolean, example: 'true' }
                  report-radial: { type: boolean, example: 'true' }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/report':
    get:
      tags:
        - Report
      summary: 'Get report settings'
      description: 'Get settings for in-game reports'
      operationId: getReport
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
        -
          name: steam_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: '76561198023513722'
        -
          name: eos_id
          in: query
          description: 'Supports `steam_id` or `eos_id`.'
          required: false
          schema:
            type: string
          example: 00021769f66c46d1a053219a51c2dd9f
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { properties: { identifier: { type: string, example: gsamod-ui-report-player }, title: { type: string, example: 'Report an issue' }, description: { type: string, example: 'Before you report, make sure you check this and that' }, players: { type: array, items: { properties: { id: { type: integer, example: '0' }, user_id: { type: integer, example: '0' }, name: { type: string, example: ' - Select player - ' } }, type: object } }, types: { type: array, items: { properties: { id: { type: string, example: other }, name: { type: string, example: Other } }, type: object } } }, type: object }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
    post:
      tags:
        - Report
      summary: 'Submit report'
      description: 'Call for submitting in-game reports'
      operationId: postReport
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - comment
                - character_id
                - coords
                - type
              properties:
                comment:
                  type: string
                  example: 'This is what I''m reporting'
                character_id:
                  description: 'Provide the in-game character id of the player that IS DOING the reporting'
                  type: integer
                  example: '12345'
                coords:
                  type: string
                  example: 'X_123 Y_456 Z_789'
                type:
                  type: string
                  example: other
                reported_player:
                  description: 'Provide `user_id` of player BEING reported.'
                  type: string
                  example: other
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  identifier: { type: string, example: gsamod-general }
                  steam_id: { type: string, example: '76561198023513722' }
                  eos_id: { type: string, example: '76561198023513722' }
                  allowed: { type: boolean, example: 'true' }
                  username_accepted: { type: boolean, example: 'true' }
                  message: { type: string, example: 'You are not on the whitelist' }
                  teleport_xyz: { type: boolean, example: 'false' }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/review':
    post:
      tags:
        - Review
      summary: 'Submit review'
      description: 'Call for submitting in-game review'
      operationId: postReview
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - comment
                - stars
              properties:
                steam_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: '76561198023513722'
                eos_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: 00021769f66c46d1a053219a51c2dd9f
                stars:
                  type: integer
                  example: '5'
                comment:
                  type: string
                  example: 'This is a great server'
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: string, example: Done! }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
  '/mod-api/v2/gameserver/{name}/consume-token':
    post:
      tags:
        - Tokens
      summary: 'Consume token'
      description: 'Call for when token gem is being consumed.'
      operationId: consumeToken
      parameters:
        -
          name: name
          in: path
          required: true
          schema:
            type: string
          example: ovddykvbs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - token_amount
              properties:
                steam_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: '76561198023513722'
                eos_id:
                  description: 'Supports `steam_id` or `eos_id`.'
                  type: string
                  example: 00021769f66c46d1a053219a51c2dd9f
                token_amount:
                  type: integer
                  example: '5'
              type: object
      responses:
        '200':
          description: 'successful operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: string, example: Done! }
                type: object
      security:
        -
          mod-api-key: []
          mod-api-secret: []
components:
  securitySchemes:
    mod-api-key:
      type: apiKey
      name: x-client-id
      in: header
    mod-api-secret:
      type: apiKey
      name: x-client-secret
      in: header
